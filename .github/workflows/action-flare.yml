name: CloudFlare Push to Production

on:
  push:
    branches: [ "testflare"]
  # allow: run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "flare"
  cancel-in-progress: false


# Grant GITHUB_TOKEN the permissions required to make a Pages deployment
permissions:
  contents: write   # to push to the repo
  id-token: write   # to verify the deployment originates from an appropriate source

jobs:

  # pull from 'pages' then push to 'flare'
  pull-and-push:
    name: push 'pages' branch to 'flare'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:  # ref required to push to repo, otherwise we're in detached HEAD mode
          ref: ${{ github.head_ref }}

      - name: Pull branches and merge
        run: |
          git fetch origin pages
          git checkout pages
          git fetch origin flare
          git checkout flare
          git merge pages flare
          git push origin flare
