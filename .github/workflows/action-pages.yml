name: Deploy to Pages Branch

on:
  push:
    branches: [ "test", "main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false


# Grant GITHUB_TOKEN the permissions required to make a Pages deployment
permissions:
  pages: write      # to deploy to Pages
  id-token: write   # to verify the deployment originates from an appropriate source
  contents: write   # to push to the repo

jobs:

  # build webgenr and examples
  build-and-deploy:
    name: Running build...
    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest

    steps:
      - name: Build altwebgen
        run: |
          echo "building from ultrasaurus/altwebgen"
          VERSION=v0.4.1
          git clone --depth 1 --branch $VERSION https://github.com/ultrasaurus/altwebgen.git
          cd altwebgen

          echo "using altwbgen version: $VERSION"
          cargo install --path .

      - name: Checkout repo
        uses: actions/checkout@v4
        with:  # ref required to push to repo, otherwise we're in detached HEAD mode
          ref: ${{ github.head_ref }}


      - name: Build website
        run: |
          export BRANCH_NAME=${{ github.ref_name }}
          source .pages/build.sh
          echo "--------- build.sh: done-------------"
          pwd
          ls -R1 .pages
          echo "-------- Build website: done-------------"

      - name : Add SHORT_SHA Environment Variable
        id   : short-sha
        shell: bash      
        run  : echo "SHORT_SHA=`git rev-parse --short HEAD`" >> $GITHUB_ENV

      - name: Add COMMIT_MSG Environment Variable
        id   : commit-msg
        shell: bash      
        run  : echo "COMMIT_MSG=`git show -s --format=%s`" >> $GITHUB_ENV

      - name: Pages
        run: |
          cat .git/config
          echo "----------------------------"
          mv .pages/_website release
          cp .pages/flare.sh .
          git add release
          git add flare.sh
          git stash
          git fetch origin pages
          git checkout -b pages origin/pages
          rm -rf *
          git add .
          git stash apply
          echo "------ git status------"
          git status
          echo "------ get ready to commit------"
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git commit -m "$SHORT_SHA to pages: $COMMIT_MSG"
          git push origin pages
          echo "------- Pages: done---------"



